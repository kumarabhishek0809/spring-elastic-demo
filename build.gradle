plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.spring.elasticsearch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	elasticSearchVersion = '6.8.0'
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter-data-elasticsearch')
     /*{
		exclude group: 'org.elasticsearch'
		exclude group: 'org.elasticsearch.plugin'
		exclude group: 'org.elasticsearch.client'
	}
    */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	compile "org.elasticsearch.client:transport:${elasticSearchVersion}"
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

    /*
	implementation("org.elasticsearch:elasticsearch:${elasticSearchVersion}") { force = true }
	implementation("org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticSearchVersion}") { force = true }
	implementation("org.elasticsearch.client:elasticsearch-rest-client:${elasticSearchVersion}") { force = true }
	*/


}

test {
	useJUnitPlatform()
}
